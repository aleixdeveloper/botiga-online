[{"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\index.js":"1","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\store.js":"2","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\reportWebVitals.js":"3","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\App.js":"4","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\reducers\\cartReducers.js":"5","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\reducers\\productReducers.js":"6","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\reducers\\orderReducers.js":"7","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\reducers\\userReducers.js":"8","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\screens\\HomeScreen.js":"9","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\screens\\CartScreen.js":"10","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\screens\\ProductScreen.js":"11","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\screens\\ProfileScreen.js":"12","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\screens\\LoginScreen.js":"13","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\screens\\RegisterScreen.js":"14","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\screens\\PlaceOrderScreen.js":"15","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\screens\\ShippingScreen.js":"16","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\screens\\PaymentScreen.js":"17","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\screens\\UserListScreen.js":"18","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\screens\\OrderScreen.js":"19","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\screens\\ProductListScreen.js":"20","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\screens\\ProductEditScreen.js":"21","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\screens\\OrderListScreen.js":"22","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\components\\Header.js":"23","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\components\\Footer.js":"24","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\screens\\UserEditScreen.js":"25","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\components\\Product.js":"26","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\components\\Loader.js":"27","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\components\\Paginate.js":"28","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\components\\Message.js":"29","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\components\\Meta.js":"30","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\components\\FormContainer.js":"31","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\components\\ProductCarousel.js":"32","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\components\\SearchBox.js":"33","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\components\\Rating.js":"34","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\constants\\productConstants.js":"35","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\constants\\cartConstants.js":"36","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\constants\\orderConstants.js":"37","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\constants\\userConstants.js":"38","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\actions\\productActions.js":"39","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\actions\\cartActions.js":"40","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\actions\\userActions.js":"41","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\actions\\orderActions.js":"42","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\components\\CheckoutSteps.js":"43","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\components\\ImageModal.js":"44","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\reducers\\themeReducers.js":"45","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\constants\\themeConstants.js":"46","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\actions\\themeActions.js":"47","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\components\\BarTheme.js":"48"},{"size":627,"mtime":1608205925729,"results":"49","hashOfConfig":"50"},{"size":2532,"mtime":1608290536867,"results":"51","hashOfConfig":"50"},{"size":375,"mtime":1608072347553,"results":"52","hashOfConfig":"50"},{"size":2889,"mtime":1608314503531,"results":"53","hashOfConfig":"50"},{"size":1345,"mtime":1608072245766,"results":"54","hashOfConfig":"50"},{"size":3751,"mtime":1608072245767,"results":"55","hashOfConfig":"50"},{"size":3656,"mtime":1608072245766,"results":"56","hashOfConfig":"50"},{"size":3811,"mtime":1608072245767,"results":"57","hashOfConfig":"50"},{"size":1820,"mtime":1608248923267,"results":"58","hashOfConfig":"50"},{"size":4142,"mtime":1608117680914,"results":"59","hashOfConfig":"50"},{"size":8932,"mtime":1608131464050,"results":"60","hashOfConfig":"50"},{"size":6916,"mtime":1608118566339,"results":"61","hashOfConfig":"50"},{"size":2530,"mtime":1608072245769,"results":"62","hashOfConfig":"50"},{"size":4577,"mtime":1608072347553,"results":"63","hashOfConfig":"50"},{"size":6544,"mtime":1608118061112,"results":"64","hashOfConfig":"50"},{"size":3009,"mtime":1608072245774,"results":"65","hashOfConfig":"50"},{"size":1972,"mtime":1608072245771,"results":"66","hashOfConfig":"50"},{"size":3015,"mtime":1608072245775,"results":"67","hashOfConfig":"50"},{"size":9348,"mtime":1608250437782,"results":"68","hashOfConfig":"50"},{"size":4492,"mtime":1608072245772,"results":"69","hashOfConfig":"50"},{"size":6875,"mtime":1608072245772,"results":"70","hashOfConfig":"50"},{"size":2776,"mtime":1608072245770,"results":"71","hashOfConfig":"50"},{"size":3054,"mtime":1608314925858,"results":"72","hashOfConfig":"50"},{"size":862,"mtime":1608315284422,"results":"73","hashOfConfig":"50"},{"size":3508,"mtime":1608072245774,"results":"74","hashOfConfig":"50"},{"size":1317,"mtime":1608292902715,"results":"75","hashOfConfig":"50"},{"size":380,"mtime":1608072245759,"results":"76","hashOfConfig":"50"},{"size":668,"mtime":1608072245760,"results":"77","hashOfConfig":"50"},{"size":293,"mtime":1608072245759,"results":"78","hashOfConfig":"50"},{"size":574,"mtime":1608072245760,"results":"79","hashOfConfig":"50"},{"size":467,"mtime":1608072245758,"results":"80","hashOfConfig":"50"},{"size":1817,"mtime":1608314404478,"results":"81","hashOfConfig":"50"},{"size":833,"mtime":1608206776633,"results":"82","hashOfConfig":"50"},{"size":1393,"mtime":1608072245761,"results":"83","hashOfConfig":"50"},{"size":1524,"mtime":1608072245763,"results":"84","hashOfConfig":"50"},{"size":284,"mtime":1608072245762,"results":"85","hashOfConfig":"50"},{"size":1210,"mtime":1608072245763,"results":"86","hashOfConfig":"50"},{"size":1506,"mtime":1608072245764,"results":"87","hashOfConfig":"50"},{"size":5687,"mtime":1608072245748,"results":"88","hashOfConfig":"50"},{"size":1346,"mtime":1608072245747,"results":"89","hashOfConfig":"50"},{"size":6284,"mtime":1608072245748,"results":"90","hashOfConfig":"50"},{"size":5762,"mtime":1608072245748,"results":"91","hashOfConfig":"50"},{"size":1839,"mtime":1608072245757,"results":"92","hashOfConfig":"50"},{"size":739,"mtime":1608314188019,"results":"93","hashOfConfig":"50"},{"size":663,"mtime":1608250039481,"results":"94","hashOfConfig":"50"},{"size":195,"mtime":1608249921880,"results":"95","hashOfConfig":"50"},{"size":1065,"mtime":1608315254319,"results":"96","hashOfConfig":"50"},{"size":675,"mtime":1608314381025,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"9ltufg",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"100"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"100"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"100"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"100"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\index.js",[],["199","200"],"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\store.js",[],"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\reportWebVitals.js",[],"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\App.js",["201"],"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\reducers\\cartReducers.js",[],"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\reducers\\productReducers.js",[],"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\reducers\\orderReducers.js",[],"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\reducers\\userReducers.js",[],"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\screens\\HomeScreen.js",[],"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\screens\\CartScreen.js",[],"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\screens\\ProductScreen.js",[],"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\screens\\ProfileScreen.js",["202"],"import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col, Table, Container } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { listMyOrders } from '../actions/orderActions'\r\nimport {USER_UPDATE_PROFILE_RESET} from '../constants/userConstants'\r\n\r\nconst ProfileScreen = ({ history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n  const { success } = userUpdateProfile\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy)\r\n  const { loading:loadingOrders ,error:errorOrders, orders } = orderListMy\r\n  \r\n  const addDec = (num) => (Math.round(num*100) / 100).toFixed(2)\r\n\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    } else {\r\n      if (!user.name || !user || success){\r\n        dispatch({type: USER_UPDATE_PROFILE_RESET})\r\n        dispatch(getUserDetails('profile'))\r\n        dispatch(listMyOrders())\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user, success])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Les contrassenyes no coincideixen')\r\n    } else {\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n    }\r\n  }\r\n\r\n  return (\r\n\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>Perfil d'usuari</h2>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {success && <Message variant='success'>Perfil actualitzat</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId='name'>\r\n            <Form.Label>Nom</Form.Label>\r\n            <Form.Control\r\n              type='name'\r\n              placeholder='Insereix un nom'\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='email'>\r\n            <Form.Label>Correu electrònic</Form.Label>\r\n            <Form.Control\r\n              type='email'\r\n              placeholder='Insereix un email'\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='password'>\r\n            <Form.Label>Insereix una contrasenya</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Contrasenya'\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='confirmPassword'>\r\n            <Form.Label>Confirma la contrasenya</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Repeteix la contrasenya'\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type='submit' variant='primary'>\r\n            Actualitza les dades\r\n          </Button>\r\n        </Form>\r\n        )}\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>Les meves comandes</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant='danger'>{errorOrders}</Message>\r\n        ) : (\r\n        <>\r\n        <Table striped bordered hover responsive className='table-sm text-center large-table'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATA</th>\r\n                <th>TOTAL</th>\r\n                <th>PAGAT</th>\r\n                <th>ENVIAT</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0,10)}</td>\r\n                  <td>{addDec(order.totalPrice)}€</td>\r\n                  <td>{order.isPaid ? <span className='success-mark'>{order.paidAt.substring(0,10)}</span> : (<i className=\"fas fa-times text-danger\"></i>)}</td>\r\n                  <td>{order.isDelivered ? <span className='success-mark'>{order.deliveredAt.substring(0,10)}</span> : (<i className=\"fas fa-times text-danger\"></i>)}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button  className=\"btn-sm\" variant='info'>Detalls</Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          {orders.map((order) => (\r\n          <>\r\n          <Table striped bordered hover responsive className='text-center small-table'> \r\n          <tr key={order._id}>\r\n              <th>ID</th>\r\n            <td>{order._id}</td>\r\n          </tr>\r\n          <tr>\r\n            <th>DATA</th>\r\n            <td>{order.createdAt.substring(0,10)}</td>\r\n          </tr>\r\n          <tr>\r\n            <th>TOTAL</th>\r\n            <td>{order.totalPrice}€</td>\r\n          </tr>\r\n          <tr>\r\n            <th>PAGAT</th>\r\n            <td>{order.isPaid ? <span className='success-mark'>{order.paidAt.substring(0,10)}</span> : (<i className=\"fas fa-times text-danger\"></i>)}</td>\r\n          </tr>\r\n          <tr>\r\n            <th>ENVIAT</th>\r\n            <td>{order.isDelivered ? <span className='success-mark'>{order.deliveredAt.substring(0,10)}</span> : (<i className=\"fas fa-times text-danger\"></i>)}</td>\r\n          </tr>\r\n          <tr>\r\n            <th></th>\r\n            <td><LinkContainer to={`/order/${order._id}`}>\r\n                    <Button  className=\"btn-sm\" variant='info'>Detalls</Button>\r\n                  </LinkContainer></td>\r\n          </tr>\r\n         </Table>\r\n         <br/>\r\n         </>\r\n          ))}\r\n          </>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default ProfileScreen\r\n","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\screens\\LoginScreen.js",[],"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\screens\\RegisterScreen.js",[],"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\screens\\PlaceOrderScreen.js",[],"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\screens\\ShippingScreen.js",[],"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\screens\\PaymentScreen.js",[],"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\screens\\UserListScreen.js",[],"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\screens\\OrderScreen.js",["203"],"import React, { useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {PayPalButton} from 'react-paypal-button-v2'\r\nimport {Col, Row, ListGroup, Image, Card, Button} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({match, history}) => {\r\n    const orderId = match.params.id\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n  \r\n    const dispatch = useDispatch()\r\n  \r\n    const orderDetails = useSelector((state) => state.orderDetails)\r\n    const { order, loading, error } = orderDetails\r\n  \r\n    const orderPay = useSelector((state) => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n  \r\n    const orderDeliver = useSelector((state) => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n  \r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n    const addDec = (num) => (Math.round(num*100) / 100).toFixed(2)\r\n    if (!loading) {\r\n\r\n  \r\n      order.itemsPrice = addDec(\r\n        order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n      )\r\n    }\r\n  \r\n    useEffect(() => {\r\n      if (!userInfo) {\r\n        history.push('/login')\r\n      }\r\n  \r\n      const addPayPalScript = async () => {\r\n        const { data: clientId } = await axios.get('/api/config/paypal')\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n        script.async = true\r\n        script.onload = () => {\r\n          setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n      }\r\n  \r\n      if (!order || successPay || successDeliver || order._id !== orderId) {\r\n        dispatch({ type: ORDER_PAY_RESET })\r\n        dispatch({ type: ORDER_DELIVER_RESET })\r\n        dispatch(getOrderDetails(orderId))\r\n      } else if (!order.isPaid) {\r\n        if (!window.paypal) {\r\n          addPayPalScript()\r\n        } else {\r\n          setSdkReady(true)\r\n        }\r\n      }\r\n    }, [dispatch, orderId, successPay, successDeliver, order])\r\n  \r\n    const successPaymentHandler = (paymentResult) => {\r\n\r\n      dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n  \r\n    const deliverHandler = () => {\r\n      dispatch(deliverOrder(order))\r\n    }\r\n  \r\n\r\n    return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : \r\n    <><h1>Comanda: <span className='order-id'>{order._id}</span> </h1>\r\n    \r\n    <Row>\r\n               <Col md={8}>\r\n                   <ListGroup variant='flush'>\r\n                       <ListGroup.Item>\r\n                           <h2>Enviament</h2>\r\n                           <p>\r\n                           <span style={{fontWeight: 'bold'}}>Nom: </span>{order.user.name}\r\n\r\n                           </p>\r\n                           <p>\r\n                           <span style={{fontWeight: 'bold'}}>Email: </span><a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n\r\n                           </p>\r\n                           <p>\r\n                               <span style={{fontWeight: 'bold'}}>Adreça: </span>\r\n                               {order.shippingAddress.address},{' '}\r\n                               {order.shippingAddress.city},{' '}\r\n                               {order.shippingAddress.postalCode}{'. '}\r\n                               {order.shippingAddress.country}\r\n                           </p>\r\n                           {order.isDelivered ? \r\n                            <Message variant='success'>\r\n                                Enviat. ({new Date(order.deliveredAt).toLocaleString()})\r\n                            </Message> : \r\n                            <Message variant='danger'>\r\n                                No enviat\r\n                            </Message>\r\n                            }\r\n                       </ListGroup.Item>\r\n                       <ListGroup.Item>\r\n                           <h2>Mètode de pagament</h2>\r\n                            <p><span style={{fontWeight: 'bold'}}>Mètode: </span>{order.paymentMethod} </p>\r\n                            {order.isPaid ? \r\n                            <Message variant='success'>\r\n                                Pagament realitzat. ({new Date(order.paidAt).toLocaleString()})\r\n                            </Message> : \r\n                            <Message variant='danger'>\r\n                                No s'ha realitzat el pagament\r\n                            </Message>\r\n                            }\r\n                       </ListGroup.Item>\r\n\r\n                       <ListGroup.Item>\r\n                           <h2>Articles de la comanda</h2>\r\n                           {order.orderItems.length === 0 ? <Message>La teva comanda està buida</Message> : (\r\n                               <ListGroup variant='flush'>\r\n                                   {order.orderItems.map((item,index) => (\r\n                                       <ListGroup.Item key={index}>\r\n                                           <Row>\r\n                                               <Col md={2}>\r\n                                                   <Image src={item.image} alt={item.name} fluid rounded />\r\n                                               </Col>\r\n                                               <Col md={6}>\r\n                                                   <Link to={`/product/${item.product}`}>\r\n                                                       {item.name}\r\n                                                   </Link>\r\n                                               </Col>\r\n                                               <Col md={4}>\r\n                                                   {item.qty} x {item.price}€ = {item.qty*item.price}€\r\n                                               </Col>\r\n                                           </Row>\r\n                                       </ListGroup.Item>\r\n                                   ) )}\r\n                               </ListGroup>\r\n                           )}\r\n                           <p>\r\n                           </p>\r\n                       </ListGroup.Item>\r\n                   </ListGroup>\r\n               </Col>\r\n               <Col md={4}>\r\n                   <Card>\r\n                       <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Resum de la comanda</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Articles</Col>\r\n                                    <Col>{order.itemsPrice}€</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Enviament</Col>\r\n                                    <Col>{order.shippingPrice}€</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>IVA (21%)</Col>\r\n                                    <Col>{addDec(order.taxPrice)}€</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col><span style={{fontWeight: 'bold', fontSize: '1.2em'}}>TOTAL</span></Col>\r\n                                    <Col><span style={{fontWeight: 'bold', fontSize: '1.2em'}}>{addDec(order.totalPrice)}€</span></Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader />}\r\n                                    {!sdkReady ? <Loader /> : (\r\n                                        <PayPalButton amount={order.totalPrice}\r\n                                        onSuccess={successPaymentHandler} />\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            )}\r\n                            {loadingDeliver && <Loader />}\r\n                            {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                <ListGroup.Item>\r\n                                    <Button type='button' className='btn btn-block' onClick={deliverHandler}>\r\n                                        Marcar com a enviat\r\n                                    </Button>\r\n                                </ListGroup.Item>\r\n                            )}\r\n                       </ListGroup>\r\n                   </Card>\r\n               </Col>\r\n           </Row>\r\n    </>\r\n}\r\n\r\nexport default OrderScreen\r\n","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\screens\\ProductListScreen.js",[],"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\screens\\ProductEditScreen.js",[],"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\screens\\OrderListScreen.js",[],"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\components\\Header.js",[],"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\components\\Footer.js",[],"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\screens\\UserEditScreen.js",[],"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\components\\Product.js",[],"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\components\\Loader.js",[],"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\components\\Paginate.js",[],"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\components\\Message.js",[],"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\components\\Meta.js",[],"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\components\\FormContainer.js",[],"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\components\\ProductCarousel.js",["204","205"],"import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\nimport {getTheme} from '../actions/themeActions'\r\n\r\nconst ProductCarousel = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const listTheme = useSelector((state) => state.getTheme)\r\n    const { loading:loadingTheme, theme } = listTheme\r\n    \r\n    const productTopRated = useSelector((state) => state.productTopRated)\r\n    const { loading, error, products} = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n        dispatch(getTheme())\r\n    },[dispatch])\r\n    console.log('back:', theme.background)\r\n    return loading ? (<Loader />) : error ? (<Message variant='danger'>{error}</Message>) : (\r\n            <div className='hide-carousel' style={{margin: '2em 2.5em 5em 2.5em'}}>\r\n                <Carousel pause='hover' className='bg-dark carousel-background'  style={{background: theme.background}}>\r\n                {products.map((product) => (\r\n                    <Carousel.Item key={product._id}>\r\n                        <Link to={`/product/${product._id}`}>\r\n                            <Image src={product.image} alt={product.name} />\r\n                            <Carousel.Caption className='carousel-caption'>\r\n                                <h3 style={{color: 'white'}}>{product.name} ({product.price}€)</h3>\r\n                            </Carousel.Caption>\r\n                        </Link>\r\n                    </Carousel.Item>\r\n                ) )}\r\n            </Carousel>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default ProductCarousel\r\n","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\components\\SearchBox.js",[],"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\components\\Rating.js",[],"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\constants\\productConstants.js",[],"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\constants\\cartConstants.js",[],"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\constants\\orderConstants.js",[],"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\constants\\userConstants.js",[],"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\actions\\productActions.js",[],"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\actions\\cartActions.js",[],"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\actions\\userActions.js",[],"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\actions\\orderActions.js",[],"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\components\\CheckoutSteps.js",[],"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\components\\ImageModal.js",[],"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\reducers\\themeReducers.js",["206"],"\r\nimport {\r\n    SET_THEME, GET_THEME_REQUEST, GET_THEME_SUCCESS, GET_THEME_FAIL\r\n} from '../constants/themeConstants'\r\n\r\nexport const getThemeReducer = (state = {theme: {}}, action) => {\r\n\r\n    switch(action.type){\r\n        case GET_THEME_REQUEST:\r\n            return {\r\n              loading: true,\r\n              theme: {}\r\n            }\r\n        case GET_THEME_SUCCESS:\r\n          return {\r\n            loading: false,\r\n            theme: action.payload\r\n          }\r\n        case GET_THEME_FAIL:\r\n            return {\r\n              loading: false,\r\n              error: action.payload\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n\r\n}\r\n","A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\constants\\themeConstants.js",[],"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\actions\\themeActions.js",["207"],"A:\\Aleix\\WebDev\\LEARN\\MERN-eCom\\botiga-online\\frontend\\src\\components\\BarTheme.js",[],{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","severity":1,"message":"213","line":1,"column":16,"nodeType":"214","messageId":"215","endLine":1,"endColumn":24},{"ruleId":"212","severity":1,"message":"216","line":2,"column":41,"nodeType":"214","messageId":"215","endLine":2,"endColumn":50},{"ruleId":"217","severity":1,"message":"218","line":67,"column":8,"nodeType":"219","endLine":67,"endColumn":62,"suggestions":"220"},{"ruleId":"212","severity":1,"message":"213","line":1,"column":28,"nodeType":"214","messageId":"215","endLine":1,"endColumn":36},{"ruleId":"212","severity":1,"message":"221","line":15,"column":21,"nodeType":"214","messageId":"215","endLine":15,"endColumn":33},{"ruleId":"212","severity":1,"message":"222","line":3,"column":5,"nodeType":"214","messageId":"215","endLine":3,"endColumn":14},{"ruleId":"212","severity":1,"message":"222","line":2,"column":9,"nodeType":"214","messageId":"215","endLine":2,"endColumn":18},"no-native-reassign",["223"],"no-negated-in-lhs",["224"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.","ArrayExpression",["225"],"'loadingTheme' is assigned a value but never used.","'SET_THEME' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"226","fix":"227"},"Update the dependencies array to be: [dispatch, orderId, successPay, successDeliver, order, userInfo, history]",{"range":"228","text":"229"},[2401,2455],"[dispatch, orderId, successPay, successDeliver, order, userInfo, history]"]